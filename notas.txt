Comandos:
  - git clone
  Crea una copia local del repositorio
  Ej. git clone 

  - git status
  Nos devuleve el estado actual del repositorio
  Ej. git status

  - git add
  Prepara cambios (línea por línea) para ser incluidos en un commit
  Ej. git add notas.txt (agrega solo 1 archivo)
  Ej. 2 git add . (agrega todos los archivos)

  - git commit
  Crea un nuevo commit con los cambios que preparamos con el comando git add. Tiene un ID de commit y un mensaje
  Ej. git commit -m "Mensaje commit"

  -git push
  Sincroniza la rama remota con lo que hay en la local, sube los commits que hay en la rama local y faltan en la remota
  Ej. git push

  - git fetch
  Trae los metadatos sobre commits, ramas, refs, etc. de un repositorio remoto pero no descarga cambios a la rama local
  Ej. git fetch

  - git pull
  Sincroniza la rama local con lo que hay en la remota, descarga los commits que hay en la rama remota y faltan en la local
  Ej. git pull


 Ramas:
  Las ramas nos permiten trabajar con el repositorio sin alterar la estabilidad de la rama principal. Como cualquier otra rama hay una local y una remota. Las ramas parten de un commit de origen.
  
  Integración de ramas:
  Para este fin, se utiliza la operación "merge". Un merge combina los commits de una rama hacia otra en un solo commit conocido como "merge commit"

  Resolución de conflictos:
  Estrategias:
  1. Merge commit: Crea un merge commit con cambios aplicados en el orden que el desarrollador elija
  2. Rebase: Cambia el punto de origen de una rama resolviendo conflictos durante la operación, requiere un "force push" para sobreescribir la rama remota

  Pull request:
  Solicita la aprobación de los cambios en una rama a otro colaborador, previo a la integración de las 2 ramas (merge)